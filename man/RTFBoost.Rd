% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RTFBoost.R
\name{RTFBoost}
\alias{RTFBoost}
\title{(Robust) tree-based functional boosting}
\usage{
RTFBoost(
  x.train,
  z.train = NULL,
  y.train,
  x.val,
  z.val = NULL,
  y.val,
  x.test,
  z.test,
  y.test,
  grid,
  t.range,
  control = RTFBoost.control(),
  ...
)
}
\arguments{
\item{x.train}{a matrix or data.frame containing observations of the functional predictor in the training data.}

\item{z.train}{a  matrix or data.frame containing values of the scalar predictors in the training data (optional, defaults to \code{NULL}).}

\item{y.train}{a  vector containing values of the scalar response in the training data.}

\item{x.val}{a matrix or data.frame containing observations of the functional predictor in the validation data.}

\item{z.val}{a  matrix or data.frame containing values of the scalar predictors in the validation data (optional, required when \code{z.train} is provided, defaults to \code{NULL}).}

\item{y.val}{a  vector containing values of the scalar response in the validation data.}

\item{x.test}{a matrix or data.frame containing observations of the functional predictor in the test data (required when \code{make.prediction} in control is \code{TRUE}).}

\item{z.test}{a  matrix or data.frame containing values of the scalar predictors in the test data (required when \code{make.prediction} in \code{control} is \code{TRUE}, and \code{z.train} and  \code{z.val}  are provided).}

\item{y.test}{a  vector containing values of the scalar response in the test data.  (optional).}

\item{grid}{a vector of time points at which  \code{x.train} and \code{x.val} are evaluated.}

\item{t.range}{a vector provided in the form of c(a, b), where a and b are numerical values specifying the boundaries of the domain of the functional predictor.}

\item{control}{a named list of control parameters as returned by \link{RTFBoost.control}.}

\item{...}{optional additional arguments passed to \code{RTFBoost}, including components \code{user.loss} and \code{tree.init}.

\code{user.loss} is a list that specifies a user-defined loss  to replace the L2 loss used by TFBoost(L2), including components
\code{func} and \code{func.grad}, denoting the loss function and its derivative respectively;

\code{tree.init} is a user-provided object that has the same form as the one returned from \link{TREE}. It is used as the tree to initialize the boosting estimator.}
}
\value{
A list with the following components:

\item{loss.train}{a vector of training errors from all iterations}
\item{loss.val}{a vector of validation errors from all iterations}
\item{f.train}{a vector of predicted values for the training data at the early stopping iteration}
\item{f.val}{a vector of predicted values for the validation data at the early stopping iteration}
\item{f.test}{a vector of predicted values for the test data at the early stopping iteration (returned if \code{make.prediction = TRUE} in \code{control})}
\item{early.stop.s1}{the early stopping iteration for the 1st stage of TFBoost(LAD-M) and TFBoost(RR) (returned if \code{type = "RR"} or \code{type = "LAD-M"}  in \code{control})}
\item{early.stop}{the early stopping iteration (for TFBoost(LAD-M) and TFBoost(RR), equals to \code{n.init} + the early stopping time in the 2nd stage}
\item{err.train}{a vector of mean squared prediction errors for training data from all iterations}
\item{err.val}{a vector of mean squared prediction errors for validation data from all iterations}
\item{err.test}{a vector of mean squared prediction errors for test data  before and at the early stopping iteration (returned if \code{make.prediction = TRUE} in \code{control})}
\item{init.vals}{a constant (if \code{init.type = "mean"} or \code{init.type = "median"}  in \code{control}) or a tree object (if \code{init.type = "LADTree"} in \code{control}) to initialize the boosting algorithm}
\item{tree.objs}{a list of trees objects (returned if \code{save.tree =  TRUE} in \code{control}, one per iteration and returned from  \link{TREE})}
\item{alpha}{a vector of step sizes (one per iteration)}
\item{save.f.train}{a matrix of predicted values for the training data from all iterations (returned if \code{save.f = TRUE} in \code{control}, one column per iteration)}
\item{save.f.val}{a matrix of predicted values for the validation data from all iterations (returned if \code{save.f = TRUE} in \code{control}, one column per iteration)}
\item{save.f.test}{a matrix of predicted values for the test data before and at the early stopping iteration (returned if \code{save.f = TRUE} and \code{make.prediction = TRUE} in \code{control}, one column per iteration)}
\item{control}{\code{control} from the input arguments}
}
\description{
This function implements tree-based boosting algorithms for functional regression, including TFBoost(LAD), TFBoost(LAD-M), and TFBoost(RR) for robust scalar-on-function regression, and TFBoost(L2) for L2 scalar-on-function regression.
}
\details{
This function implements tree-based boosting algorithms for functional regression.
The algorithms use functional multi-index regression trees as the base learners, which are constructed using functions available in the \code{rpart} and \code{lme4} packages (see https://arxiv.org/abs/2109.02989).
}
\examples{

\dontrun{
data(fruitfly)
n <- nrow(fruitfly$eggs) 
n0 <- floor( 0.2 * n) 
set.seed(123)
idx_test <- sample(n, n0)
idx_train <- sample((1:n)[-idx_test], floor( 0.6 * n ) )
idx_val <- (1:n)[ -c(idx_test, idx_train) ] 
xtrain <- fruitfly$eggs[idx_train, ]
ytrain <- fruitfly$lifetime[idx_train ]
xval <- fruitfly$eggs[idx_val, ]
yval <- fruitfly$lifetime[idx_val ]
xtest <- fruitfly$eggs[idx_test, ]
ytest <- fruitfly$lifetime[idx_test ]
gg <- 1:24  
tt <- c(0,24) 
niter <- 1000
my.control <- TFBoost.control(make_prediction = TRUE, 
tree_control = TREE.control(tree_type  = "B", d = 1, num_dir = 200), 
shrinkage = 0.05, nknot = 3, loss = "l2")

model_TFBoost <- TFBoost(x_train = xtrain, y_train = ytrain,  x_val = xval,  y_val = yval, 
       x_test = xtest, y_test = ytest, grid = gg, t_range  = tt, niter = niter, 
       control = my.control)
}    
}
\author{
Xiaomeng Ju, \email{xiaomeng.ju@stat.ubc.ca}
}
